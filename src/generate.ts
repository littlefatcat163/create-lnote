import _ from 'lodash'
import CryptoJS from 'crypto-js'
import { encrypt, decrypt, encodeStr, decodeStr, createSecret } from './encDec'
import { randomRange, pcInfo } from './utils'

function createInlineSecret(str?: string) {
    const key =
        '6570893b08c40eb8171f0a9cb987d290e658c6ab21dd046ff8149879dc3d277c6e667069cc0a992326a58bf3e671df6fcbfdc0257de45aad8ad5d4b4dcc2f3311698140765193'
    const encrypted =
        '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'
    const arr = decryptData(encrypted, key) as string[]
    return createSecret(arr.join(`欧耶__${str}/${Date.now()}__#!@#$$%^&*()`))
}

/**
 * @description 加密数据
 *  - 1. 将数据转为JSON字符串
 *  - 2. encode 字符串
 *  - 3. 定制新密钥加密为 value，密钥字段名为 inlineSecret
 *  - 4. encode 加密过一次的数据
 *  - 5. 用最外层的key加密
 * @param {Object} data 需要加密的数据源
 * @param {string} secret 密钥
 * @returns {string} 密文
 */
export function encryptData(data: Object, secret: string): string {
    const inlineSecret = createInlineSecret(secret)
    const encrypted = {
        inlineSecret,
        value: encrypt(encodeStr(JSON.stringify(data)), inlineSecret),
    }
    return encrypt(encodeStr(JSON.stringify(encrypted)), secret)
}

/**
 * @description 解密数据
 *  - 1. 最外层解密获取 inlineSecret 和 value
 *  - 2. 解密value
 *  - 3. decode 和 JSON 格式化出 data
 * @param str
 * @param secret
 * @returns {Object} data
 */
export function decryptData(str: string, secret: string): any {
    try {
        const { inlineSecret, value } = JSON.parse(
            decodeStr(decrypt(str, secret))
        )
        const decrypted = JSON.parse(decodeStr(decrypt(value, inlineSecret)))
        return decrypted
    } catch (error) {
        return undefined
    }
}

export function generateSignature() {
    const key =
        '1c276db6c71e4ff4c0566a319453389543f914cbbd3892a56e67dd16ec19b3aefda96b5a628e66fef1502348c0a3ee3335c72c09418eba4779a46f456e61f3571698141784741'
    const encrypted =
        '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'
    const arr = decryptData(encrypted, key) as string[]
    return arr[0]
}

export function generateAdminAuthCode() {
    const key =
        'e57a19cd10ea74cec929bd0009e42d7a853b6275cece7dae9fa65a53f01b4de5fed3e9e449c7b0b3a2eef7cc4236aec9699da4c76fb87594c42661c1860f63841698244448620'
    const encrypted =
        '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'
    const arr = decryptData(encrypted, key) as string[]
    return arr[0]
}

export async function licenseKey() {
    const { serial } = await pcInfo()
    const signature = generateSignature()
    const hash = CryptoJS.SHA256(`${serial}@@0ooO..@${signature}`).toString()
    const chunks = hash.match(/.{1,5}/g) || []
    return chunks.join('-')
}

export function validateLicense(input?: string): Promise<boolean | string> {
    return new Promise((resolve, reject) => {
        const key =
            'b6c43db66924183321187cd47b99f2d409cd446cafd87a4d154c1479c2f8dd5b8234977f12565ca98df6c7f675783708acea99361c4161e2b67766ef8a3043e81698154294158'
        const encrypted =
            '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'
        const arr = decryptData(encrypted, key) as string[]
        if (_.isEmpty(input)) {
            reject(arr[0])
            return
        }
        setTimeout(async () => {
            const lic = await licenseKey()
            if (lic === input) {
                resolve(true)
            } else {
                reject(arr[1])
            }
        }, randomRange(1, 3) * 1000)
    })
}

export function validateAdmin(input?: string): Promise<boolean | string> {
    return new Promise((resolve, reject) => {
        const key =
            '71c36c8f5754c8a8e583de6703888d09bd804d265764d3e865e6d8ad9781214f05dc3f822663ab84db1949a5787c8c745b016e3630db15f0c847eb9a7eabadb81698154585973'
        const encrypted =
            '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'
        const arr = decryptData(encrypted, key) as string[]
        if (_.isEmpty(input)) {
            reject(arr[0])
            return
        }
        setTimeout(() => {
            const lic = createSecret(createSecret(`${input}`, 0), 0)
            const code = generateAdminAuthCode()
            if (lic === code) {
                resolve(true)
            } else {
                reject(arr[1])
            }
        }, randomRange(1, 3) * 1000)
    })
}

export function createAppWording() {
    const key =
        'a34ae4547ebe7847d5111c3c5cedd4ac131822fd1c214f643bf31f324045be980a712e8e7808b8dd313ca8bfd593a6049f647651bc5093d37699338fca41fd471698243444149'
    const encrypted =
        ''
    return decryptData(encrypted, key) as {
        appNameEmpty: string
        done: string
        confName: string
        confUrl: string
        themeConfName: string
    }
}

export function generateRegisterQuestions() {
    const key =
        '2e2f8c2544c1fa599acdd80146584234079ca290dabdba2d00901eff776e7a0f61f20b56a4bd4dfc7666c00d9e5651741cc312203f7086ca83e199c0b04d30da1698154170182'
    const encrypted =
        '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'
    const arr = decryptData(encrypted, key) as any[]
    const qss = arr.map((item) => {
        if (item.name === 'password') {
            return {
                ...item,
                validate: validateAdmin,
            }
        }
        return item
    })
    return qss
}

export function generateCreateQuestions(appName: string) {
    const key =
        '8883fa6a865d00fa723ae8121c3b1e33783d810103ffb01ff35f0aaced9501c2c1b023e565244df5f3a4e023dea74d6d0451536c495f78d654e827b103085cf91698243932728'
    const encrypted =
        ''
    const arr = decryptData(encrypted, key) as any[]
    const qss = arr.map((item) => {
        if (item.name === 'name') {
            return {
                ...item,
                default: appName,
            }
        }
        if (item.name === 'lic') {
            return {
                ...item,
                validate: validateLicense,
            }
        }
        return item
    })
    return qss
}
